package springproject.restperson.controllers.base;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import springproject.restperson.implementations.BaseServiceImpl;import springproject.restperson.models.entities.Base;public abstract class BaseControllerImpl<E extends Base, S extends BaseServiceImpl<E, Long>>        implements BaseController<E, Long> {    @Autowired    protected S service;    @GetMapping("/select")    public ResponseEntity<?> select() {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.select("ENABLED"));        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.NOT_FOUND)                    .body("{\"error\":\"Not found\"}");        }    }    @GetMapping("/get/{id}")    public ResponseEntity<?> get(@PathVariable Long id) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.get(id, "ENABLED"));        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.NOT_FOUND)                    .body("{\"error\":\"Not Found\"}");        }    }    @PostMapping("/insert")    public ResponseEntity<?> insert(@RequestBody E entity) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.insert(entity));        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.BAD_REQUEST)                    .body("{\"error\":\"Save error\"}");        }    }    @PutMapping("/update/{id}")    public ResponseEntity<?> update(@PathVariable Long id, @RequestBody E entity) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.update(id, entity));        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.BAD_REQUEST)                    .body("{\"error\":\"Update error\"}");        }    }    @DeleteMapping("/delete/{id}")    public ResponseEntity<?> delete(@PathVariable Long id) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.delete(id));        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.BAD_REQUEST)                    .body("{\"error\":\"Not found\"}");        }    }}
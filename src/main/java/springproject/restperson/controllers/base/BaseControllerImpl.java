package springproject.restperson.controllers.base;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Pageable;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import springproject.restperson.implementations.BaseServiceImpl;import springproject.restperson.models.entities.Base;import java.util.List;public abstract class BaseControllerImpl<T extends Base, S extends BaseServiceImpl<T, Long>>        implements BaseController<T, Long> {    public static final String ENABLED="ENABLED";    @Autowired    protected S service;    @Override    @GetMapping("/select")    public ResponseEntity<List<T>> select() {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.select(ENABLED));        } catch (Exception e) {            return (ResponseEntity<List<T>>) ResponseEntity.notFound();        }    }    @Override    @GetMapping("/select/{page}")    public ResponseEntity<Page<T>> pagination(@PathVariable Integer page) {        try {            Pageable pageable = PageRequest.of(page, 10);            return ResponseEntity.status(HttpStatus.OK)                    .body(service.select(pageable, ENABLED));        } catch (Exception e) {            return (ResponseEntity<Page<T>>) ResponseEntity.notFound();        }    }    @Override    @GetMapping("/get/{id}")    public ResponseEntity<T> get(@PathVariable Long id) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.get(id, ENABLED));        } catch (Exception e) {            return (ResponseEntity<T>) ResponseEntity.notFound();        }    }    @Override    @PostMapping("/insert")    public ResponseEntity<T> insert(@RequestBody T t) {        return ResponseEntity.status(HttpStatus.OK)                .body(service.insert(t));    }    @Override    @PutMapping("/update/{id}")    public ResponseEntity<T> update(@PathVariable Long id, @RequestBody T t) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.update(id, t));        } catch (Exception e) {            return (ResponseEntity<T>) ResponseEntity.notFound();        }    }    @Override    @DeleteMapping("/delete/{id}")    public ResponseEntity<T> delete(@PathVariable Long id) {        try {            return ResponseEntity.status(HttpStatus.OK)                    .body(service.delete(id));        } catch (Exception e) {            return (ResponseEntity<T>) ResponseEntity.notFound();        }    }}
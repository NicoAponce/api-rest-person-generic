package springproject.restperson.implementations;import lombok.extern.java.Log;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import springproject.restperson.models.entities.Base;import springproject.restperson.repositories.BaseRepository;import springproject.restperson.services.BaseService;import javax.transaction.Transactional;import java.io.Serializable;import java.util.ArrayList;import java.util.List;@Logpublic abstract class BaseServiceImpl<T extends Base, I extends Serializable> implements BaseService<T, I> {    @Autowired    protected BaseRepository<T, I> baseRepository;    @Override    @Transactional    public List<T> select(String status) {        try {            return baseRepository.findByStatus(status);        } catch (Exception e) {            log.warning(e.getMessage());        }        return new ArrayList<>();    }    @Override    public Page<T> select(Pageable pageable, String status) {        try {            return baseRepository.findByStatus(pageable, status);        } catch (Exception e) {            log.warning(e.getMessage());        }        return null;    }    @Override    @Transactional    public T get(I id, String status) {        try {            return baseRepository.findByIdAndStatus(id, status);        } catch (Exception e) {            log.warning(e.getMessage());        }        return null;    }    @Override    @Transactional    public T insert(T t) {        try {            t.setStatus("ENABLED");            return baseRepository.save(t);        } catch (Exception e) {            log.warning(e.getMessage());        }        return null;    }    @Override    public T delete(I id) {        try {            T t = baseRepository.findById(id).orElse(null);            if (t == null) {                return null;            }            if (baseRepository.existsById(id)) {                t.setStatus("DISABLED");                return baseRepository.save(t);            } else {                log.warning("Error");            }        } catch (Exception e) {            log.warning("Error");        }        return null;    }}